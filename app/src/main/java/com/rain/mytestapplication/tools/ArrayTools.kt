package com.rain.mytestapplication.tools

import android.util.Log
import com.rain.mytestapplication.log

object ArrayTools {


    fun removeArrayElement(): String {
        val originalData: String = "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "9272.51 \n" +
                "12163.85 \n" +
                "4665.84 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "1812.20 \n" +
                "93654.34 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "5713.28 \n" +
                "4702.29 \n" +
                "1993.04 \n" +
                "1519.30 \n" +
                "19280.68 \n" +
                "5907.52 \n" +
                "1862.94 \n" +
                "1302.75 \n" +
                "4344.55 \n" +
                "330.89 \n" +
                "4909.41 \n" +
                "2508.12 \n" +
                "3257.96 \n" +
                "2483.54 \n" +
                "3486.06 \n" +
                "239.19 \n" +
                "477.02 \n" +
                "8075.31 \n" +
                "75388.67 \n" +
                "248.94 \n" +
                "9713.22 \n" +
                "12836.55 \n" +
                "12193.04 \n" +
                "2779.33 \n" +
                "3742.94 \n" +
                "1608.54 \n" +
                "687.76 \n" +
                "6060.76 \n" +
                "4939.05 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "9565.57 \n" +
                "8766.05 \n" +
                "3014.74 \n" +
                "1717.80 \n" +
                "1264.43 \n" +
                "7311.68 \n" +
                "5573.70 \n" +
                "5851.14 \n" +
                "237.28 \n" +
                "7302.05 \n" +
                "22855.98 \n" +
                "559.51 \n" +
                "5384.38 \n" +
                "906.57 \n" +
                "4405.17 \n" +
                "6299.40 \n" +
                "1771.68 \n" +
                "23262.14 \n" +
                "220.23 \n" +
                "3209.76 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "21619.65 \n" +
                "6048.99 \n" +
                "6578.83 \n" +
                "33036.39 \n" +
                "35953.06 \n" +
                "3657.51 \n" +
                "8564.44 \n" +
                "4889.98 \n" +
                "6992.67 \n" +
                "4131.78 \n" +
                "9287.46 \n" +
                "15233.94 \n" +
                "2477.32 \n" +
                "22328.33 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "11057.48 \n" +
                "1599.42 \n" +
                "2656.54 \n" +
                "3268.01 \n" +
                "1123.20 \n" +
                "10058.84 \n" +
                "4187.66 \n" +
                "87875.25 \n" +
                "6517.07 \n" +
                "22912.08 \n" +
                "1456.98 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "10196.65 \n" +
                "738.84 \n" +
                "1117.43 \n" +
                "8051.41 \n" +
                "4147.46 \n" +
                "6420.16 \n" +
                "12217.43 \n" +
                "6106.81 \n" +
                "8061.70 \n" +
                "2891.45 \n" +
                "2022.00 \n" +
                "763.50 \n" +
                "30724.58 \n"

        val manualData: String = "0.00 \n" +
                "3841.25 \n" +
                "1812.20 \n" +
                "93654.34 \n" +
                "12163.85 \n" +
                "9272.51 \n" +
                "4665.84 \n" +
                "1519.30 \n" +
                "1993.04 \n" +
                "248.94 \n" +
                "75388.67 \n" +
                "9713.22 \n" +
                "12836.55 \n" +
                "477.02 \n" +
                "8075.31 \n" +
                "687.76 \n" +
                "1608.54 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "3486.06 \n" +
                "239.19 \n" +
                "4702.29 \n" +
                "5713.28 \n" +
                "2483.54 \n" +
                "3257.96 \n" +
                "2779.33 \n" +
                "3742.94 \n" +
                "12193.04 \n" +
                "6060.76 \n" +
                "2508.12 \n" +
                "4909.41 \n" +
                "4344.55 \n" +
                "330.89 \n" +
                "1862.94 \n" +
                "1302.75 \n" +
                "4939.05 \n" +
                "5907.52 \n" +
                "19280.68 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "8766.05 \n" +
                "9565.57 \n" +
                "5573.70 \n" +
                "7311.68 \n" +
                "1264.43 \n" +
                "3014.74 \n" +
                "1717.80 \n" +
                "237.28 \n" +
                "5851.14 \n" +
                "5384.38 \n" +
                "6299.40 \n" +
                "906.57 \n" +
                "4405.17 \n" +
                "7302.05 \n" +
                "559.51 \n" +
                "22855.98 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "23262.14 \n" +
                "1771.68 \n" +
                "220.23 \n" +
                "3209.76 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "21619.65 \n" +
                "6048.99 \n" +
                "6578.83 \n" +
                "33036.39 \n" +
                "15233.94 \n" +
                "3657.51 \n" +
                "35953.06 \n" +
                "8564.44 \n" +
                "11057.48 \n" +
                "2477.32 \n" +
                "4131.78 \n" +
                "9287.46 \n" +
                "4889.98 \n" +
                "6992.67 \n" +
                "87875.25 \n" +
                "3268.01 \n" +
                "4187.66 \n" +
                "856.22 \n" +
                "1123.20 \n" +
                "2656.54 \n" +
                "6517.07 \n" +
                "8355.45 \n" +
                "22912.08 \n" +
                "1599.42 \n" +
                "1456.98 \n" +
                "10058.84 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "738.84 \n" +
                "10196.65 \n" +
                "4147.46 \n" +
                "8051.41 \n" +
                "1117.43 \n" +
                "6420.16 \n" +
                "12217.43 \n" +
                "6106.81 \n" +
                "8061.70 \n" +
                "2022.00 \n" +
                "2891.45 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "763.50 \n" +
                "30724.58 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n" +
                "0.00 \n"
        val originalDataList = originalData.split("\n").filter { it.isNotEmpty() }.map { removeTrailingZeros(it.toFloat()) }.toMutableList()
        val manualDataList = manualData.split("\n").filter { it.isNotEmpty() }.map {removeTrailingZeros(it.toFloat()) }.toMutableList()
//        manualDataList.removeAll(originalDataList)
        manualDataList.removeAll(listOf("0.00"))

        removeIntersection(originalDataList.map { it.toFloat() }.toMutableList(),manualDataList.map { it.toFloat() }.toMutableList())
        return ""
    }

    fun removeIntersection(array1: MutableList<Float>, array2: MutableList<Float>) {
        val countMap1 = mutableMapOf<Float, Int>()
        val countMap2 = mutableMapOf<Float, Int>()

        // 统计 array1 中每个元素的出现次数
        for (element in array1) {
            countMap1[element] = (countMap1[element] ?: 0) + 1
        }

        // 统计 array2 中每个元素的出现次数
        for (element in array2) {
            countMap2[element] = (countMap2[element] ?: 0) + 1
        }

        // 找出两个数组中的交集元素并记录其最小出现次数
        val intersectionCountMap = mutableMapOf<Float, Int>()
        for ((key, value) in countMap1) {
            if (countMap2.containsKey(key)) {
                intersectionCountMap[key] = minOf(value, countMap2[key]!!)
            }
        }

        // 从 array1 中移除交集元素
        for ((key, count) in intersectionCountMap) {
            repeat(count) {
                array1.remove(key)
            }
        }

        // 从 array2 中移除交集元素
        for ((key, count) in intersectionCountMap) {
            repeat(count) {
                array2.remove(key)
            }
        }


        Log.d("ArrayTools", "originalDataList = ${array1.filter { it.toDouble() !=0.0 }}, manualDataList = ${array2.filter { it.toDouble() != 0.0 }}")
    }

    private fun removeTrailingZeros(number: Float): String {
        return String.format("%.2f", number) // 将 %.2f 改为其他需要保留小数位数的格式
    }

}